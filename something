#!/usr/bin/env python

import rospy
from geometry_msgs.msg import Twist
from gazebo_msgs.msg import ModelState

def callback(data):
    

    
    	
        model_state = ModelState()
        print("test")
        model_state.model_name = "unit_cylinder"  # Name of the model in Gazebo
        model_state.twist.linear.x = data.linear.x
        model_state.twist.linear.y = data.linear.y
        model_state.twist.linear.z = data.linear.z
        model_state.twist.angular.x = data.angular.x
        model_state.twist.angular.y = data.angular.y
        model_state.twist.angular.z = data.angular.z

        self.model_publisher.publish(model_state)

def main():
    rospy.init_node('cylinder_control_plugin_node')
    plugin = CylinderControlPlugin()
    rospy.spin()

if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass
        
if __name__ == '__main__':
    rospy.init_node('cylinder_control_plugin_node')

    rate = rospy.Rate(5)  # ROS Rate at 5Hz
    model_publisher = rospy.Publisher('/gazebo/set_model_state', ModelState, queue_size=1)
    rospy.Subscriber('/cylinder_velocity', Twist, callback)
    
    
    while not rospy.is_shutdown():
        pos_process()
        rate.sleep()
